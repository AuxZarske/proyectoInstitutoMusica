# Generated by Django 2.2.5 on 2020-02-21 20:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alumno',
            fields=[
                ('dni', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='DNI')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del usuario')),
                ('apellido', models.CharField(max_length=200, verbose_name='Apellido del usuario')),
                ('fechaNac', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('sexo', models.CharField(max_length=50, verbose_name='Sexo de la persona')),
                ('domicilio', models.CharField(max_length=100, verbose_name='Domicilio del usuario')),
                ('telefono', models.CharField(max_length=20, verbose_name='telefono del usuario')),
                ('correoElectronico', models.EmailField(max_length=254, verbose_name='Correo electronico del usuario')),
                ('estado', models.BooleanField(default=False, verbose_name='Usuario activo/inactivo')),
                ('fechaInscripcion', models.DateField(auto_now_add=True, verbose_name='Fecha de Creacion')),
                ('archivo', models.BinaryField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones del Alumno')),
                ('conocimientoPrevio', models.TextField(blank=True, null=True, verbose_name='El nivel que tiene el alumno')),
                ('nivel', models.CharField(max_length=100, verbose_name='Nivel de la partitura')),
                ('reputacion', models.IntegerField(default=100, verbose_name='numero de reputacion max 100')),
            ],
            options={
                'verbose_name': 'Alumno',
                'verbose_name_plural': 'Alumnos',
                'permissions': (('es_alumno', 'es alumno'), ('es_pre_alumno', 'es pre alumno')),
            },
        ),
        migrations.CreateModel(
            name='Clase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creadaClase', models.DateField(auto_now_add=True, null=True, verbose_name='Fecha de Creacion de la asistencia')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la clase')),
                ('descripcion', models.TextField(verbose_name='Descripcion de la clase')),
                ('cupo', models.IntegerField(default=0, verbose_name='cupo clase')),
                ('nivel', models.CharField(max_length=50, verbose_name='Nivel de la clase')),
                ('historica', models.BooleanField(default=False, verbose_name='estado de clase en tiempo activo/inactivo')),
                ('cantidadAsistida', models.IntegerField(default=0, verbose_name='cantidad de asistencias totales a clase')),
                ('alumnoAsociados', models.ManyToManyField(default=None, to='gestionMusical.Alumno')),
            ],
            options={
                'verbose_name': 'Clase',
                'verbose_name_plural': 'Clases',
            },
        ),
        migrations.CreateModel(
            name='Compositor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombreIdentificador', models.CharField(max_length=150, verbose_name='Nombre de compositor')),
            ],
            options={
                'verbose_name': 'Compositor',
                'verbose_name_plural': 'Compositor',
            },
        ),
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la especialidad')),
                ('descripcion', models.TextField(verbose_name='Descripcion de la especialidad')),
                ('estadoEsp', models.BooleanField(default=True, verbose_name='activo/inactivo')),
                ('fechaCreacion', models.DateField(auto_now_add=True, verbose_name='Fecha de Creacion')),
            ],
            options={
                'verbose_name': 'Especialidad',
                'verbose_name_plural': 'Especialidades',
            },
        ),
        migrations.CreateModel(
            name='Filmina',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=200, verbose_name='Nombre de la imagen')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripcion de la imagen')),
                ('link', models.CharField(blank=True, max_length=400, null=True, verbose_name='link de la imagen')),
                ('archivo', models.BinaryField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('diaSemanal', models.CharField(max_length=100, verbose_name='dia de la semana')),
                ('horario_inicio', models.TimeField(null=True)),
                ('horario_final', models.TimeField(null=True)),
            ],
            options={
                'verbose_name': 'horario',
                'verbose_name_plural': 'horario',
            },
        ),
        migrations.CreateModel(
            name='InstitutoDato',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=15, verbose_name='Nombre del instituto')),
                ('telefono', models.CharField(max_length=20, verbose_name='telefono')),
                ('correoElectronico', models.EmailField(max_length=254, verbose_name='Correo electronico del usuario')),
                ('domicilio', models.CharField(max_length=100, verbose_name='Domicilio del usuario')),
                ('horario', models.CharField(max_length=100, verbose_name='horario')),
                ('archivo', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'InstitutoDato',
                'verbose_name_plural': 'InstitutoDato',
            },
        ),
        migrations.CreateModel(
            name='Instrumento',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del instrumento')),
                ('descripcion', models.TextField(verbose_name='Descripcion del instrumento')),
                ('color', models.CharField(max_length=100, verbose_name='color del instrumento')),
                ('estadoUso', models.CharField(max_length=100, verbose_name='estado de uso del instrumento')),
                ('fechaCreacion', models.DateField(auto_now_add=True, verbose_name='Fecha de Creacion')),
                ('archivo', models.BinaryField(blank=True, null=True)),
                ('estado', models.BooleanField(default=True, verbose_name='activo/inactivo')),
            ],
            options={
                'verbose_name': 'Instrumento',
                'verbose_name_plural': 'Instrumentos',
            },
        ),
        migrations.CreateModel(
            name='MusicaTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombreMusica', models.CharField(max_length=100, verbose_name='Nombre del musica')),
            ],
            options={
                'verbose_name': 'Musica',
                'verbose_name_plural': 'Musicas',
            },
        ),
        migrations.CreateModel(
            name='Partitura',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la partitura')),
                ('descripcion', models.TextField(verbose_name='Descripcion')),
                ('archivo', models.BinaryField(blank=True, null=True)),
                ('nivel', models.CharField(max_length=100, verbose_name='Nivel de la partitura')),
                ('fechaCrear', models.DateField(auto_now_add=True, verbose_name='Fecha de Creacion')),
                ('compositor', models.ManyToManyField(blank=True, to='gestionMusical.Compositor')),
                ('especialidadesAcordes', models.ManyToManyField(blank=True, to='gestionMusical.Especialidad')),
                ('musicaElecciones', models.ManyToManyField(blank=True, to='gestionMusical.MusicaTipo')),
            ],
            options={
                'verbose_name': 'Partitura',
                'verbose_name_plural': 'Partituras',
            },
        ),
        migrations.CreateModel(
            name='Profesor',
            fields=[
                ('dni', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='DNI')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del usuario')),
                ('apellido', models.CharField(max_length=200, verbose_name='Apellido del usuario')),
                ('fechaNac', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('sexo', models.CharField(max_length=50, verbose_name='Sexo de la persona')),
                ('domicilio', models.CharField(max_length=100, verbose_name='Domicilio del usuario')),
                ('telefono', models.CharField(max_length=20, verbose_name='telefono del usuario')),
                ('correoElectronico', models.EmailField(max_length=254, verbose_name='Correo electronico del usuario')),
                ('estado', models.BooleanField(default=False, verbose_name='Usuario activo/inactivo')),
                ('fechaInscripcion', models.DateField(auto_now_add=True, verbose_name='Fecha de Creacion')),
                ('archivo', models.BinaryField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones del Profesor')),
                ('historiaPrevia', models.TextField(blank=True, null=True, verbose_name='Observaciones del Profesor')),
                ('especialidades', models.ManyToManyField(blank=True, to='gestionMusical.Especialidad')),
            ],
            options={
                'verbose_name': 'Profesor',
                'verbose_name_plural': 'Profesores',
                'permissions': (('es_profesor', 'es profesor'), ('es_pre_profesor', 'es pre profesor'), ('es_director', 'es director')),
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del rol')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripcion del rol')),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='Tema',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del tema')),
                ('descripcion', models.TextField(verbose_name='Descripcion del tema')),
                ('nivel', models.CharField(max_length=100, verbose_name='Nivel del tema')),
                ('tipo', models.CharField(max_length=100, verbose_name='Tipo de la tema')),
                ('archivo', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tema',
                'verbose_name_plural': 'Temas',
            },
        ),
        migrations.CreateModel(
            name='TipoTarea',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la tipo tarea')),
            ],
            options={
                'verbose_name': 'TipoTarea',
                'verbose_name_plural': 'TipoTareas',
            },
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('dniTutor', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='DNI')),
                ('nombreTutor', models.CharField(max_length=100, verbose_name='Nombre del tutor')),
                ('apellidoTutor', models.CharField(max_length=200, verbose_name='Apellido del tutor')),
                ('telefonoTutor', models.CharField(max_length=20, verbose_name='telefono del usuario')),
                ('emailTutor', models.EmailField(blank=True, default=None, max_length=254, null=True, verbose_name='Correo electronico del tutor')),
            ],
            options={
                'verbose_name': 'Tutor',
                'verbose_name_plural': 'Tutores',
            },
        ),
        migrations.CreateModel(
            name='TipoRelacionTema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claseInt', models.IntegerField(blank=True, null=True, verbose_name='id clase')),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionMusical.Alumno')),
                ('tema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionMusical.Tema')),
            ],
        ),
        migrations.CreateModel(
            name='TipoRelacionPartitura',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claseInt', models.IntegerField(blank=True, null=True, verbose_name='id clase')),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionMusical.Alumno')),
                ('partitura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionMusical.Partitura')),
            ],
        ),
        migrations.CreateModel(
            name='TipoRelacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(blank=True, max_length=30, null=True, verbose_name='que relacion de tutor es')),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionMusical.Alumno')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionMusical.Tutor')),
            ],
        ),
        migrations.CreateModel(
            name='Recomendacion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la recomendacion')),
                ('descripcion', models.TextField(verbose_name='en q consiste la reco de practica')),
                ('fechaCreacion', models.DateField(auto_now_add=True, verbose_name='Fecha de Creacion de la recomendacion')),
                ('fechaCierre', models.DateField(blank=True, null=True, verbose_name='Fecha de fin')),
                ('estadoReco', models.BooleanField(default=False, verbose_name='estado de reco activo/inactivo')),
                ('alumnoReco', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Alumno')),
                ('claseReferencia', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Clase')),
                ('partiMusicReco', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Partitura')),
                ('profesorReferencia', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Profesor')),
            ],
            options={
                'verbose_name': 'Recomendacion',
                'verbose_name_plural': 'Recomendaciones',
            },
        ),
        migrations.AddField(
            model_name='profesor',
            name='rol',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Rol'),
        ),
        migrations.AddField(
            model_name='profesor',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Prestamo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estadoProfesor', models.CharField(max_length=100, verbose_name='Tipo profe del prestamo')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones cuando entrega el instrumento')),
                ('condicion', models.CharField(blank=True, max_length=100, null=True, verbose_name='condicion de prestamo')),
                ('fechaCreacion', models.DateField(auto_now_add=True, verbose_name='Fecha de Creacion del prestamo')),
                ('fechaCierre', models.DateField(blank=True, null=True, verbose_name='Fecha de entrega')),
                ('estadoPrestamo', models.BooleanField(default=False, verbose_name='estado de prestamo activo/inactivo')),
                ('duracionDias', models.IntegerField(default=1, verbose_name='duracion de la prestamo')),
                ('alumnoResponsable', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Alumno')),
                ('instrumentoPrestado', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Instrumento')),
                ('profesorReferencia', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Profesor')),
            ],
            options={
                'verbose_name': 'Prestamo',
                'verbose_name_plural': 'Prestamos',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTutor',
            fields=[
                ('dniTutor', models.PositiveIntegerField(db_index=True, verbose_name='DNI')),
                ('nombreTutor', models.CharField(max_length=100, verbose_name='Nombre del tutor')),
                ('apellidoTutor', models.CharField(max_length=200, verbose_name='Apellido del tutor')),
                ('telefonoTutor', models.CharField(max_length=20, verbose_name='telefono del usuario')),
                ('emailTutor', models.EmailField(blank=True, default=None, max_length=254, null=True, verbose_name='Correo electronico del tutor')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tutor',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTema',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del tema')),
                ('descripcion', models.TextField(verbose_name='Descripcion del tema')),
                ('nivel', models.CharField(max_length=100, verbose_name='Nivel del tema')),
                ('tipo', models.CharField(max_length=100, verbose_name='Tipo de la tema')),
                ('archivo', models.BinaryField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tema',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProfesor',
            fields=[
                ('dni', models.PositiveIntegerField(db_index=True, verbose_name='DNI')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del usuario')),
                ('apellido', models.CharField(max_length=200, verbose_name='Apellido del usuario')),
                ('fechaNac', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('sexo', models.CharField(max_length=50, verbose_name='Sexo de la persona')),
                ('domicilio', models.CharField(max_length=100, verbose_name='Domicilio del usuario')),
                ('telefono', models.CharField(max_length=20, verbose_name='telefono del usuario')),
                ('correoElectronico', models.EmailField(max_length=254, verbose_name='Correo electronico del usuario')),
                ('estado', models.BooleanField(default=False, verbose_name='Usuario activo/inactivo')),
                ('fechaInscripcion', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creacion')),
                ('archivo', models.BinaryField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones del Profesor')),
                ('historiaPrevia', models.TextField(blank=True, null=True, verbose_name='Observaciones del Profesor')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('rol', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestionMusical.Rol')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Profesor',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPrestamo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estadoProfesor', models.CharField(max_length=100, verbose_name='Tipo profe del prestamo')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones cuando entrega el instrumento')),
                ('condicion', models.CharField(blank=True, max_length=100, null=True, verbose_name='condicion de prestamo')),
                ('fechaCreacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creacion del prestamo')),
                ('fechaCierre', models.DateField(blank=True, null=True, verbose_name='Fecha de entrega')),
                ('estadoPrestamo', models.BooleanField(default=False, verbose_name='estado de prestamo activo/inactivo')),
                ('duracionDias', models.IntegerField(default=1, verbose_name='duracion de la prestamo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('alumnoResponsable', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestionMusical.Alumno')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instrumentoPrestado', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestionMusical.Instrumento')),
                ('profesorReferencia', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestionMusical.Profesor')),
            ],
            options={
                'verbose_name': 'historical Prestamo',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPartitura',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la partitura')),
                ('descripcion', models.TextField(verbose_name='Descripcion')),
                ('archivo', models.BinaryField(blank=True, null=True)),
                ('nivel', models.CharField(max_length=100, verbose_name='Nivel de la partitura')),
                ('fechaCrear', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creacion')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Partitura',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInstrumento',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del instrumento')),
                ('descripcion', models.TextField(verbose_name='Descripcion del instrumento')),
                ('color', models.CharField(max_length=100, verbose_name='color del instrumento')),
                ('estadoUso', models.CharField(max_length=100, verbose_name='estado de uso del instrumento')),
                ('fechaCreacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creacion')),
                ('archivo', models.BinaryField(blank=True, null=True)),
                ('estado', models.BooleanField(default=True, verbose_name='activo/inactivo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Instrumento',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInstitutoDato',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('nombre', models.CharField(max_length=15, verbose_name='Nombre del instituto')),
                ('telefono', models.CharField(max_length=20, verbose_name='telefono')),
                ('correoElectronico', models.EmailField(max_length=254, verbose_name='Correo electronico del usuario')),
                ('domicilio', models.CharField(max_length=100, verbose_name='Domicilio del usuario')),
                ('horario', models.CharField(max_length=100, verbose_name='horario')),
                ('archivo', models.BinaryField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical InstitutoDato',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEspecialidad',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la especialidad')),
                ('descripcion', models.TextField(verbose_name='Descripcion de la especialidad')),
                ('estadoEsp', models.BooleanField(default=True, verbose_name='activo/inactivo')),
                ('fechaCreacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creacion')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Especialidad',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCompositor',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('nombreIdentificador', models.CharField(max_length=150, verbose_name='Nombre de compositor')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Compositor',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalClase',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('creadaClase', models.DateField(blank=True, editable=False, null=True, verbose_name='Fecha de Creacion de la asistencia')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la clase')),
                ('descripcion', models.TextField(verbose_name='Descripcion de la clase')),
                ('cupo', models.IntegerField(default=0, verbose_name='cupo clase')),
                ('nivel', models.CharField(max_length=50, verbose_name='Nivel de la clase')),
                ('historica', models.BooleanField(default=False, verbose_name='estado de clase en tiempo activo/inactivo')),
                ('cantidadAsistida', models.IntegerField(default=0, verbose_name='cantidad de asistencias totales a clase')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('profesorCargo', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestionMusical.Profesor')),
            ],
            options={
                'verbose_name': 'historical Clase',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAsistencia',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('creada', models.DateField(blank=True, editable=False, null=True, verbose_name='Fecha de Creacion de la asistencia')),
                ('estadoReco', models.BooleanField(default=False, verbose_name='estado de asistencia activo/inactivo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('alumnoAsist', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestionMusical.Alumno')),
                ('claseReferencia', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestionMusical.Clase')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('horario', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestionMusical.Horario')),
                ('profesorReferencia', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestionMusical.Profesor')),
            ],
            options={
                'verbose_name': 'historical Asistencia',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAlumno',
            fields=[
                ('dni', models.PositiveIntegerField(db_index=True, verbose_name='DNI')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del usuario')),
                ('apellido', models.CharField(max_length=200, verbose_name='Apellido del usuario')),
                ('fechaNac', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('sexo', models.CharField(max_length=50, verbose_name='Sexo de la persona')),
                ('domicilio', models.CharField(max_length=100, verbose_name='Domicilio del usuario')),
                ('telefono', models.CharField(max_length=20, verbose_name='telefono del usuario')),
                ('correoElectronico', models.EmailField(max_length=254, verbose_name='Correo electronico del usuario')),
                ('estado', models.BooleanField(default=False, verbose_name='Usuario activo/inactivo')),
                ('fechaInscripcion', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creacion')),
                ('archivo', models.BinaryField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones del Alumno')),
                ('conocimientoPrevio', models.TextField(blank=True, null=True, verbose_name='El nivel que tiene el alumno')),
                ('nivel', models.CharField(max_length=100, verbose_name='Nivel de la partitura')),
                ('reputacion', models.IntegerField(default=100, verbose_name='numero de reputacion max 100')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('especialidadRequerida', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestionMusical.Especialidad')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('musica', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestionMusical.MusicaTipo')),
                ('rol', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestionMusical.Rol')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Alumno',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='clase',
            name='especialidadesDar',
            field=models.ManyToManyField(default=None, to='gestionMusical.Especialidad'),
        ),
        migrations.AddField(
            model_name='clase',
            name='horarios',
            field=models.ManyToManyField(default=None, to='gestionMusical.Horario'),
        ),
        migrations.AddField(
            model_name='clase',
            name='profesorCargo',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Profesor'),
        ),
        migrations.CreateModel(
            name='Asistencia',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creada', models.DateField(auto_now_add=True, null=True, verbose_name='Fecha de Creacion de la asistencia')),
                ('estadoReco', models.BooleanField(default=False, verbose_name='estado de asistencia activo/inactivo')),
                ('alumnoAsist', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Alumno')),
                ('claseReferencia', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Clase')),
                ('horario', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Horario')),
                ('profesorReferencia', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Profesor')),
            ],
            options={
                'verbose_name': 'Asistencia',
                'verbose_name_plural': 'Asistencias',
            },
        ),
        migrations.AddField(
            model_name='alumno',
            name='especialidadRequerida',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Especialidad'),
        ),
        migrations.AddField(
            model_name='alumno',
            name='musica',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.MusicaTipo'),
        ),
        migrations.AddField(
            model_name='alumno',
            name='partiturasAsociadas',
            field=models.ManyToManyField(through='gestionMusical.TipoRelacionPartitura', to='gestionMusical.Partitura'),
        ),
        migrations.AddField(
            model_name='alumno',
            name='rol',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='gestionMusical.Rol'),
        ),
        migrations.AddField(
            model_name='alumno',
            name='temasAsociadas',
            field=models.ManyToManyField(through='gestionMusical.TipoRelacionTema', to='gestionMusical.Tema'),
        ),
        migrations.AddField(
            model_name='alumno',
            name='tutor',
            field=models.ManyToManyField(through='gestionMusical.TipoRelacion', to='gestionMusical.Tutor'),
        ),
        migrations.AddField(
            model_name='alumno',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
